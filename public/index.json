[
{
	"uri": "https://servicecatalogtoolsworkshop.com/",
	"title": "AWS Service Catalog Tools Intro Workshop",
	"tags": [],
	"description": "",
	"content": " Welcome Builders! The following sections take you through how to use a suite of open source tools built to compliment AWS Service Catalog to manage your Portfolios and products at scale across multiple regions and Accounts.\nYou can use the arrows to move backwards and forwards through the Workshop\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/1-welcome.html",
	"title": "Welcome",
	"tags": [],
	"description": "",
	"content": "This is the first day of your AWS Professional Services engagement with our customer, ACME Org. ACME Org is using AWS Service Catalog to build products to meet security and governance requirements. A few words from the project sponsor, ACME Org\u0026rsquo;s Chief Information Security Officer (CISO):\n We are a regulated industry that believes that security is job zero and is crucial to building new capabilities in the cloud, and we are excited to have Professional Services on-board to support our project. Over the next few years, we\u0026rsquo;re looking to move our most sensitive workloads to the cloud and we want to ensure that we can enable our development teams to build with security guardrails in place.\nDoing this will help us move fast, but also ensure that we meet our commitments to our regulators, our internal security controls functions, and most importantly ensure that we grow our trusted relationships with customers.\nThe project will be using the open source service catalog tools developed by the Professional Servcies Team at AWS. During the Proof of Concept stage of the project, we found that these tools enabled us to create and deploy AWS Service Catalog products that comply with our security and governance requirements. We plan to use these products to build solutions that comply with our policies by default.\n The project has been broken into a number of deliverable tasks:\n Install the Tools in an AWS Account Create an AWS Servcie Catalog Product which enables AWS Config Create an AWS Service Catalog Product to create a Config Rule to check for non-compliant S3 Buckets Create an AWS Service Catalog Product which only deploys compliant S3 Buckets Create an AWS Service Catalog Product which limits priviliges provided to new IAM Roles  Don\u0026rsquo;t worry if you get stuck - look around the room to find friendly helpers from AWS who can help you continue on your journey.\nYou can use the arrows to move backwards and forwards through the workshop\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/10-servicecatalog.html",
	"title": "AWS Service Catalog",
	"tags": [],
	"description": "",
	"content": " What is AWS Service Catalog AWS Service Catalog Service allows organizations to create and manage catalogs of IT services that are approved for use on AWS.\nThese IT services can include everything from virtual machine images, servers, software, and databases to complete multi-tier application architectures. AWS Service Catalog allows you to centrally manage commonly deployed IT services, and helps you achieve consistent governance and meet your compliance requirements, while enabling users to quickly deploy only the approved IT services they need.\n NOTE: Whilst this Workshop makes use of AWS Service Catalog, the primary goal is to learn how to use a suite of open source tools created to compliment the native AWS service.\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/15-factory.html",
	"title": "Service Catalog Factory",
	"tags": [],
	"description": "",
	"content": " What is Service Catalog Factory Service Catalog Factory is part of a suite of open source Tools which have been built to compliment the AWS Service Catalog Service.\nService Catalog Factory enables you to quickly build AWS CodePipelines that will create Service Catalog portfolios and populate them with products across multiple regions of your AWS Account. You specify where in git the source code is for your products and you specify which regions you would like your products to exist and the framework will perform all of the undifferentiated heavy lifting for you.\nIn addition, the pipelines the framework creates can perform functional tests and static analysis on your templates to help you with your SDLC.\nService Catalog Factory allows you to define Service Catalog portfolios and products using YAML. You can version your products and specify where the source code for them can be found.\nYou can configure the frameowrk to publish the portfolios, products and versions in each of your required AWS Regions.\nHigh level architecture diagram You build products in a central hub account using AWS CodePipeline and AWS CodeBuild, you then deploy them into AWS Service Catalog in every enabled region of your hub account using AWS CodePipeline and AWS CloudFormation.\n  User interaction with the Framework is via a YAML file. The YAML file contains the definition of the Portfolios and Products you want to manage. Updates to the YAML file in AWS CodeCommit triggers the AWS CodePipeline to manage execute the tasks required.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites/20-install-factory.html",
	"title": "Install Factory",
	"tags": [],
	"description": "",
	"content": " Install Factory This section provide a step-by-step process to install the Service Catalog Factory tool. Installation makes use of CloudFormation and deploys all of the resources required for Factory to run.\n Install Factory Process   Verify Factory Installation   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites/30-install-puppet.html",
	"title": "Install Puppet",
	"tags": [],
	"description": "",
	"content": " Install Puppet This section provide a step-by-step process to install the Service Catalog Puppet tool. Installation makes use of CloudFormation and deploys all of the resources required for Puppet to run.\nThis section covers:  Install Puppet Process   Verify Puppet Installation   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites.html",
	"title": "Prerequisites",
	"tags": [],
	"description": "",
	"content": "In order to complete this workshop you will need:\n A single AWS Account which you can log into A web browser where to access the AWS console.  Running this Workshop at re:invent? We have provided an AWS Account for you. Details available on the card you were handed when you entered the room.\nFor re:invent Workshops, use the credentials you were provided at the start of the session. Speak to one of the AWS Workshop Team if you don\u0026rsquo;t have any login details.\n  Install Factory   Install Puppet   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/30-puppet.html",
	"title": "Service Catalog Puppet",
	"tags": [],
	"description": "",
	"content": " What is Service Catalog Puppet Service Catalog Puppet is part of a suite of open source Tools which have been built to compliment the AWS Service Catalog Service.\nService Catalog Puppet enables you to provision AWS Service Catalog Products into multiple Accounts and Regions across your AWS Estate.\nThe Tool reduces the Operational burden of engineering a solution to support Portfolio Sharing and Product Launches across a large Enterprise and allows you to focus on writing the Products you require to support your Organizations needs.\nService Catalog Puppet makes use of a number of AWS Services including AWS CodePipeline, AWS CodeBuild and AWS CloudFormation to manage this for you.\nHigh-Level Architecture Diagram You use an AWS CodeBuild project in a central hub account that provisions AWS Service Catalog Products into spoke accounts on your behalf. The framework takes care of cross account sharing and cross region product replication for you.\n  User interaction with the Framework is via a YAML file. The YAML file contains the definition of the AWS Accounts you want to manage (using tags), the portfolios you want to share and the Products you want to launch.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/40-time-to-create-some-products.html",
	"title": "Managing Products",
	"tags": [],
	"description": "",
	"content": "You have successfully delivered the pre-requisites for the engagement and are now ready to develop a set of Products to meet ACME Org\u0026rsquo;s compliance requirements.\nIn a project update with the CISO you confirm the steps you have taken so far:\n ✅ Installed service catalog factory that lets you build AWS Service Catalog portfolios and products ✅ Installed service catalog puppet that lets you share AWS Service Catalog products and provision them elsewhere.  The next phase of the engagement is to build out the Security Products using the newly installed tools. For each Product we will:\n Define the Product in a Portfolio using Factory Create a CodeCommit Repo to store the Product code Define the Account which we want to deploy Products into using Puppet Define the Product and Version we wish to Launch into the Account using Puppet  The CISO has provided a set of requirements:\n ACME Org must be able to audit the current configuration of their AWS environment All S3 buckets must be encrypted Any unencrypted S3 buckets must be identified All new IAM Roles must be restricted from being overly permissive  Using service catalog tools, we can build a set of products to meet these requirements and provide the customer with a framework which they can use to extend their governance product set as required.\n Don\u0026rsquo;t worry if you cannot complete all the assigned tasks during the workshop, you can complete them in your own time, using your own AWS account.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019.html",
	"title": "re:Invent 2019",
	"tags": [],
	"description": "",
	"content": " re:Invent 2019 Workshop Welcome to this Workshop Session at re:Invent 2019.\nMeet the Team  Eamonn Faherty Jamie McKay Ritesh Sinha Steve Morris Thivan Visvanathan Alex Nicot  You can use the left and right arrows to navigate through the Workshop\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1/100-create-the-product.html",
	"title": "Create the product",
	"tags": [],
	"description": "",
	"content": " Create the product We need to tell the framework that we want to create a product. When we add the product to the framework it will add it to AWS Service Catalog in every region that we specified when installing the framework.\nAdding the product to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository\n Scroll down to the bottom of the page and hit the Create file button     Copy the following snippet into the main input field:   Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Set the File name to portfolios/reinvent.yaml\n Set your Author name\n Set your Email address\n Set your Commit message\n  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verify that the change worked Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were very quick, the pipeline may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/200-task-2/100-create-the-product.html",
	"title": "Create the product",
	"tags": [],
	"description": "",
	"content": " Create the product We need to tell the framework we want to create a product. When we add the product to the framework it will add it to AWS Service Catalog in every region we specified when installing the framework.\nAdd the product to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to the products section (be careful with your indentation):   - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   The whole input should look like this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Set your Author name Set your Email address Set your Commit message  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verify that the change worked Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick, the pipeline may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3/100-create-the-product.html",
	"title": "Create the product",
	"tags": [],
	"description": "",
	"content": " Create the product We need to tell the framework we want to create a product. When we add the product to the framework it will add it to AWS Service Catalog in every region we specified when installing the framework.\nAdding the product to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to the products section (be careful with your indentation):   - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   The whole input should look like this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Set your Author name Set your Email address Set your Commit message  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verify the change worked Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/400-task-4/100-create-the-product.html",
	"title": "Create the product",
	"tags": [],
	"description": "",
	"content": " Create the product We need to tell the framework we want to create a product. When we add the product to the framework it will add it to AWS Service Catalog in every region we specified when installing the framework.\nAdding the product to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to the products section (be careful with your indentation):   - Name: \u0026#34;compliant-iam-role\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS IAM role that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-iam-role\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   The whole input should look like this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance-self-service\u0026#34; - Name: \u0026#34;compliant-iam-role\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS IAM role that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-iam-role\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Set your Author name Set your Email address Set your Commit message  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verify the change worked Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1.html",
	"title": "Task 1",
	"tags": [],
	"description": "",
	"content": " The ask Going back to our original requirements list, we have been asked to provide a mechanism to audit the current configuration of their AWS estate. To do this, we will enable AWS Config.\nAWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources. Config continuously monitors and records your AWS resource configurations and allows you to automate the evaluation of recorded configurations against desired configurations.\nThe plan We are going to create an AWS Service Catalog product and provision it into our account. This product will enable AWS Config.\nTo do this we will need to use Service Catalog factory to build the product and then we will use Service Catalog puppet to provision it into the designated account.\nThis task should give you an understanding of how the service catalog tools are used to both create and then provision AWS Service Catalog products. We\u0026rsquo;ll build on this knowledge in subsequent tasks.\nIf you need help at any time please raise your hands in the air like you just don\u0026rsquo;t care.\n  Create the product   Create the version   Configure product version   Create the portfolio   Add product to portfolio   Provisioning the product   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1/200-create-the-version.html",
	"title": "Create the version",
	"tags": [],
	"description": "",
	"content": " Create the version We have created the product. We now need to tell the framework we want to create a new version of our product. Once this is done we will have an AWS CodePipeline that will take the source code for our product from a git repository and add it to AWS Service Catalog in each region that we specified when installing the framework.\nAdd the product version to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to the end of the file (be careful with your indentation):   Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34;   Verify the contents of your file matches this:   Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the version was created Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Now that your ServiceCatalogFactory pipeline has completed you can view the newly created pipeline: aws-config-enable-config-v1-pipeline\nYou can safely ignore aws-config-enable-config-v1-pipeline has failed. For the pipeline to succeed, we need to add the source code for it to work which we will do in the next step.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/200-task-2/200-create-the-version.html",
	"title": "Create the version",
	"tags": [],
	"description": "",
	"content": " Create the version We now need to tell the framework we want to create a new version of our product. Once this is done we will have an AWS CodePipeline that will take the source code for our product from git and add it to AWS Service Catalog in each region we specified when installing the framework.\nAdd the product version to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to product you just added (be careful with your indentation):   Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34;   Verify the contents of your file matches this:   Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the version was created Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Now that your ServiceCatalogFactory pipeline has completed you can view the newly created pipeline: aws-config-s3-bucket-server-side-encryption-enabled-v1-pipeline\nYou can ignore aws-config-s3-bucket-server-side-encryption-enabled-v1-pipeline has failed.\nWe need to add the source code for it to work.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3/200-create-the-version.html",
	"title": "Create the version",
	"tags": [],
	"description": "",
	"content": " Create the version We now need to tell the framework we want to create a new version of our product. Once this is done we will have an AWS CodePipeline that will take the source code for our product from git and add it to AWS Service Catalog in each region we specified when installing the framework.\nAdding the version to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to product you just added (be careful with your indentation):   Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34;   Verify the contents of your file matches this:   Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the version was created Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Now that your ServiceCatalogFactory pipeline has completed you can view the newly created pipeline: compliant-bucket-v1-pipeline\nYou can ignore compliant-bucket-v1-pipeline has failed.\nWe need to add the source code for it to work.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/400-task-4/200-create-the-version.html",
	"title": "Create the version",
	"tags": [],
	"description": "",
	"content": " Create the version We now need to tell the framework we want to create a new version of our product. Once this is done we will have an AWS CodePipeline that will take the source code for our product from git and add it to AWS Service Catalog in each region we specified when installing the framework.\nAdding the version to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again Click on portfolios     Click on reinvent.yaml     Click Edit     Add the following to product you just added (be careful with your indentation):   Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-iam-role\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-iam-role\u0026#34; BranchName: \u0026#34;master\u0026#34;   Verify the contents of your file matches this:   Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34; - Name: \u0026#34;compliant-iam-role\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS IAM role that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-iam-role\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-iam-role\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-iam-role\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the version was created Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Now that your ServiceCatalogFactory pipeline has completed you can view the newly created pipeline: compliant-iam-role-v1-pipeline\nYou can ignore compliant-iam-role-v1-pipeline has failed.\nWe need to add the source code for it to work.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites/20-install-factory/200-installing.html",
	"title": "Install Factory Process",
	"tags": [],
	"description": "",
	"content": " Navigate to CloudFormation  Select the CloudFormation Service.    Confirm that you are in the eu-west-1 (Ireland) region.\n Create a new CloudFormation Stack  Select \u0026lsquo;Create Stack\u0026rsquo;    Select the pre-configured CloudFormation Template Service Catalog Factory can be installed via a pre-created CloudFormation template stored in S3 under the following URL: \u0026gt; https://service-catalog-tools.s3.eu-west-2.amazonaws.com/factory/latest/servicecatalog-factory-initialiser.template.yaml\n Paste this URL under \u0026lsquo;Amazon S3 URL\u0026rsquo;: Hit Next    Specify Stack Details  Specify the Stack details as follows:  Stack Name: factory-initialization-stack Enable Regions: eu-west-1  Hit Next    Create the Stack  Leave Defaults for \u0026lsquo;Configure Stack Options\u0026rsquo; Hit Next Acknowledge that the Stack will create an IAM Role Hit \u0026lsquo;Create Stack\u0026rsquo;     You will now see the Stack Status as \u0026lsquo;CREATE_IN_PROGRESS\u0026rsquo;     Wait for the Stack Status to go to CREATE_COMPLETE    Run the CodeBuild Project The CloudFormation Stack has created an AWS CodeBuild project which when run will install Service Catalog Factory.\n Navigate to the CodeBuild Service Select the servicecatalog-product-factory-initialiser project and Start Build     Keep default settings and select Start Build again Once the build is complete, the build status will be \u0026lsquo;Succeeded\u0026rsquo;    Service Catalog Factory is now installed in your AWS Account, let\u0026rsquo;s verify the resources that have been deployed.\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites/30-install-puppet/200-installing.html",
	"title": "Install Puppet Process",
	"tags": [],
	"description": "",
	"content": " Navigate to CloudFormation  Select the CloudFormation Service.    Confirm you are in the eu-west-1 (Ireland) region.\n Create a new CloudFormation Stack  Select \u0026lsquo;Create Stack\u0026rsquo;    Note that the Factory Initialization Stack has been deployed. If yours has not refer to \u0026lsquo;Install Factory Process\u0026rsquo;\n Select the pre-configured CloudFormation Template Service Catalog Puppet can be installed via a pre-created CloudFormation Template stored in S3 under the following URL: \u0026gt; https://service-catalog-tools.s3.eu-west-2.amazonaws.com/puppet/latest/servicecatalog-puppet-initialiser.template.yaml\n Paste this URL under \u0026lsquo;Amazon S3 URL\u0026rsquo;: Hit Next    Specify Stack Details  Specify the Stack details as follows:  Stack Name: puppet-initialization-stack Enable Regions: eu-west-1 OrgIAMRoleArn: None ShouldCollectCloudformationEvents: false ShouldForwardEventsToEventbridge: false ShouldForwardFailuresToOpscenter: false\n  Hit Next    Create the Stack  Leave Defaults for \u0026lsquo;Configure Stack Options\u0026rsquo; Hit Next Acknowledge that the Stack will create an IAM Role Hit \u0026lsquo;Create Stack\u0026rsquo;     You will now see the Stack Status as \u0026lsquo;CREATE_IN_PROGRESS\u0026rsquo;     Wait for the Stack Status to go to CREATE_COMPLETE    Run the CodeBuild Project The CloudFormation Stack has created an AWS CodeBuild project which when run will install Service Catalog Factory.\n Navigate to the CodeBuild Service Select the servicecatalog-product-puppet-initialiser project and Start Build     Keep default settings and select Start Build again Once complete, Status will be \u0026lsquo;Succeeded\u0026rsquo;    Factory is now installed in your Account, let\u0026rsquo;s verify the resources that have been deployed.\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/200-task-2.html",
	"title": "Task 2",
	"tags": [],
	"description": "",
	"content": " The ask Our users love to use S3 to build innovative solutions. As we are a regulated industry, we are required to check that they do so with the right security controls in place. Today, we don\u0026rsquo;t know if all our users are using server-side encryption to ensure that we comply with our internal security policies. We want to identify S3 buckets that are in use today that don\u0026rsquo;t use S3 server side encryption and notify users so that they can enforce it by default.\nCan you help us develop an automated mechanism to check for non-compliant S3 buckets?\nThe plan We are going to create an AWS Service Catalog product and provision it into our account. This product will enable an AWS Config managed rule that will check if server side encryption is enabled on the AWS S3 buckets in our account.\nTo do this we will need to use Service Catalog factory to build the product and then we will need to use Service Catalog puppet to provision it into the designated account.\nIf you need help at any time please raise your hands in the air like you just don\u0026rsquo;t care.\n  Create the product   Create the version   Configure the product version   Add product to portfolio   Provisioning the product   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1/300-configure-the-product-version.html",
	"title": "Configure product version",
	"tags": [],
	"description": "",
	"content": " Configuring the product version pipeline Now that a product and version have been created we now need to add the source code for the product so we can get it added to Service Catalog.\nAdd the source code for your product When you configured your product version, you specified the following:\nVersions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34;  We now need to create the CodeCommit repository and add the AWS CloudFormation template we are going to use for our product into that repository.\n Navigate to AWS CodeCommit\n Click Create repository\n     Input the name aws-config-enable-config     Click Create     Scroll down to the bottom of the page and hit the Create file button     Copy the following snippet into the main input field:   AWSTemplateFormatVersion: \u0026#34;2010-09-09\u0026#34; Description: | Enables AWS Config in the account / region where this is provisioned. Resources: Wow: amazing   Set the File name to product.template.yaml\n Set your Author name\n Set your Email address\n Set your Commit message\n  Using a good / unique commit message will help you understand what is going on later.\n Creating that file should trigger your aws-config-enable-config-v1-pipeline.\nOnce the pipeline has has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repository the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog products to view your newly created version.\nYou should see the product you created listed:\n  Click on the product and verify v1 is there\n  If you cannot see your version please raise your hand for some assistance\n You have now successfully created a version for your product! Next you are going to create a portfolio and add your product to it.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/200-task-2/300-configure-the-product-version.html",
	"title": "Configure the product version",
	"tags": [],
	"description": "",
	"content": " Configuring the product version pipeline Now that a product and version have been created we now need to add the source code for the product so we can get it added to Service Catalog.\nAdd the source code for your product When you configured your version, you specified the following:\nVersions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34;  We now need to create the CodeCommit repository and add the AWS Cloudformation template we are going to use for our product into that repository.\n Navigate to AWS CodeCommit\n Click Create repository\n     Input the name aws-config-s3-bucket-server-side-encryption-enabled     Click Create     Scroll down to the bottom of the page and hit the Create file button     Copy the following snippet into the main input field:   AWSTemplateFormatVersion: \u0026#34;2010-09-09\u0026#34; Description: | Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption Resources: AWSConfigRule: Type: AWS::Config::ConfigRule Properties: ConfigRuleName: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED Description: | Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption. Scope: ComplianceResourceTypes: - \u0026#39;AWS::S3::Bucket\u0026#39; Source: Owner: AWS SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED   Set the File name to product.template.yaml\n Set your Author name\n Set your Email address\n Set your Commit message\n  Using a good / unique commit message will help you understand what is going on later.\n Creating that file should trigger your aws-config-s3-bucket-server-side-encryption-enabled-v1-pipeline.\nOnce the pipeline has has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog products to view your newly created version.\nYou should see the product you created listed:\n  Click on the product and verify v1 is there\n  If you cannot see your version please raise your hand for some assistance\n You have now successfully created a version for your product! Next you are going to create a portfolio and add your product to it.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3/300-configure-the-product-version.html",
	"title": "Configure the product version",
	"tags": [],
	"description": "",
	"content": " Configuring the product version pipeline Now that a product and version have been created we now need to add the source code for the product so we can get it added to Service Catalog.\nAdding the source code for your product When you configured your version, you specified the following:\nVersions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34;  We now need to create the CodeCommit repository and add the AWS Cloudformation template we are going to use for our product into that repository.\n Navigate to AWS CodeCommit\n Click Create repository\n     Input the name compliant-bucket     Click Create     Scroll down to the bottom of the page and hit the Create file button     Copy the following snippet into the main input field:   AWSTemplateFormatVersion: \u0026#34;2010-09-09\u0026#34; Description: | Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption Resources: AWSConfigRule: Type: AWS::Config::ConfigRule Properties: ConfigRuleName: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED Description: | Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption. Scope: ComplianceResourceTypes: - \u0026#39;AWS::S3::Bucket\u0026#39; Source: Owner: AWS SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED   Set the File name to product.template.yaml\n Set your Author name\n Set your Email address\n Set your Commit message\n  Using a good / unique commit message will help you understand what is going on later.\n Creating that file should trigger your compliant-bucket-v1-pipeline.\nOnce the pipeline has has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog products to view your newly created version.\nYou should see the product you created listed:\n  Click on the product and verify v1 is there\n  If you cannot see your version please raise your hand for some assistance\n You have now successfully created a version for your product! Next you are going to create a portfolio and add your product to it.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/400-task-4/300-configure-the-product-version.html",
	"title": "Configure the product version",
	"tags": [],
	"description": "",
	"content": " Configuring the product version pipeline Now that a product and version have been created we now need to add the source code for the product so we can get it added to Service Catalog.\nAdding the source code for your product When you configured your version, you specified the following:\nVersions: - Name: \u0026#34;v1\u0026#34;  Description: \u0026#34;v1 of compliant-iam-role\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-iam-role\u0026#34; BranchName: \u0026#34;master\u0026#34;  We now need to create the CodeCommit repository and add the AWS Cloudformation template we are going to use for our product into that repository.\n Navigate to AWS CodeCommit\n Click Create repository\n     Input the name compliant-iam-role     Click Create     Scroll down to the bottom of the page and hit the Create file button     Copy the following snippet into the main input field:   AWSTemplateFormatVersion: \u0026#34;2010-09-09\u0026#34; Description: | Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption Resources: AWSConfigRule: Type: AWS::Config::ConfigRule Properties: ConfigRuleName: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED Description: | Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption. Scope: ComplianceResourceTypes: - \u0026#39;AWS::S3::Bucket\u0026#39; Source: Owner: AWS SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED   Set the File name to product.template.yaml\n Set your Author name\n Set your Email address\n Set your Commit message\n  Using a good / unique commit message will help you understand what is going on later.\n Creating that file should trigger your compliant-iam-role-v1-pipeline.\nOnce the pipeline has has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  You should see your commit message on this screen, it will help you know which version of ServiceCatalogFactory repo the pipeline is processing.\n If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog products to view your newly created version.\nYou should see the product you created listed:\n  Click on the product and verify v1 is there\n  If you cannot see your version please raise your hand for some assistance\n You have now successfully created a version for your product! Next you are going to create a portfolio and add your product to it.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3.html",
	"title": "Task 3",
	"tags": [],
	"description": "",
	"content": " The ask Self service s3 bucket\nThe plan When we create this sharable product we are going to create a new portfolio for it. This portfolio will be shared with our customers so they can self service.\nIf you need help at any time please raise your hands in the air like you just don\u0026rsquo;t care.\n  Create the product   Create the version   Configure the product version   Create the portfolio   Add the product to the portfolio   Sharing the product   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites/20-install-factory/300-verify.html",
	"title": "Verify Factory Installation",
	"tags": [],
	"description": "",
	"content": " What have we deployed? The following AWS resources have just been deployed into your AWS Account:\nCloudFormation Stacks The CodeBuild job created 2 CloudFormation Stacks which in turn deployed the resources listed below:\n URL: https://eu-west-1.console.aws.amazon.com/cloudformation/home?region=eu-west-1\n   Factory CodeCommit Repository This respository holds the Service Catalog Factory YAML files which are used to configure AWS Service Catalog Portfolios and Products.\n URL: https://eu-west-1.console.aws.amazon.com/codesuite/codecommit/repositories?region=eu-west-1\n   Factory CodePipeline This CodePipeline is triggered by updates to the CodeCommit Repository. When run, it will create the Service Catalog Portfolios and Products defined in the portfolio files.\n URL: https://eu-west-1.console.aws.amazon.com/codesuite/codepipeline/pipelines?region=eu-west-1\n   S3 Buckets An S3 Bucket was created to store artifacts for Service Catalog factory.\n URL: https://s3.console.aws.amazon.com/s3/home?region=eu-west-1\n   If everything was deployed correctly, proceed to \u0026lsquo;Install Puppet\u0026rsquo;. If not, don\u0026rsquo;t worry, speak to one of the AWS helpers and we can help.\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/30-prerequisites/30-install-puppet/300-verify.html",
	"title": "Verify Puppet Installation",
	"tags": [],
	"description": "",
	"content": " What have we deployed? The following AWS resources have just been deployed into your AWS Account:\nCloudFormation Stacks The CodeBuild job created 2 CloudFormation Stacks which in turn deployed the resources listed below\n URL: https://eu-west-1.console.aws.amazon.com/cloudformation/home?region=eu-west-1\n   Puppet CodeCommit Repository This respository holds the Service Catalog Puppet manifest YAML file which is used to configure provisioning and sharing.\n URL: https://eu-west-1.console.aws.amazon.com/codesuite/codecommit/repositories?region=eu-west-1\n   Puppet CodePipeline This CodePipeline is triggered by updates to the CodeCommit Repository. When run, it will create the Service Catalog Portfolios and Products defined in the portfolio files.\n URL: https://eu-west-1.console.aws.amazon.com/codesuite/codepipeline/pipelines?region=eu-west-1\n   S3 Buckets Three S3 Buckets were created to store artifacts for Service Catalog Puppet.\n URL: https://s3.console.aws.amazon.com/s3/home?region=eu-west-1\n   If everything was deployed correctly, proceed to \u0026ldquo;You have been hired\u0026rdquo;. If not, don\u0026rsquo;t worry, speak to one of the AWS helpers and we can help.\n "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1/400-create-the-portfolio.html",
	"title": "Create the portfolio",
	"tags": [],
	"description": "",
	"content": " Create the portfolio Before we can add a product to a portfolio we need to create the portfolio. Below are the steps needed to create a portfolio.\nAdding the portfolio to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again\n Click on portfolios\n     Click on reinvent.yaml     Click Edit     Add the following to the end of the file (be careful with your indentation):  Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Verify the contents of your file matches this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#39;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#39; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the portfolio was created Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your portfolio.\nYou should see the portfolio you just created listed:\n  If you cannot see your portfolio please raise your hand for some assistance\n You have now successfully created a portfolio!\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3/400-create-the-portfolio.html",
	"title": "Create the portfolio",
	"tags": [],
	"description": "",
	"content": " Create the portfolio Before we can add a product to a portfolio we need to create the portfolio. Below are the steps needed to create a portfolio.\nAdding the portfolio to the framework  Navigate to the ServiceCatalogFactory CodeCommit repository again\n Click on portfolios\n     Click on reinvent.yaml     Click Edit     Add the following to the end of the file (be careful with your indentation):  - DisplayName: \u0026#34;cloud-engineering-governance-self-service\u0026#34; Description: \u0026#34;Portfolio containing the products you can use to ensure governance of AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Verify the contents of your file matches this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - DisplayName: \u0026#34;cloud-engineering-governance-self-service\u0026#34; Description: \u0026#34;Portfolio containing the products you can use to ensure governance of AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the portfolio was created Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your portfolio.\nYou should see the portfolio you just created listed:\n  If you cannot see your portfolio please raise your hand for some assistance\n You have now successfully created a portfolio!\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/400-task-4.html",
	"title": "Task 4",
	"tags": [],
	"description": "",
	"content": " The ask Complex IAM role\nThe plan create role product\nIf you need help at any time please raise your hands in the air like you just don\u0026rsquo;t care.\n  Create the product   Create the version   Configure the product version   Add the product to the portfolio   Sharing the product   "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1/500-add-the-product-to-the-portfolio.html",
	"title": "Add product to portfolio",
	"tags": [],
	"description": "",
	"content": " Add the product to the portfolio Now that you have a product and portfolio you can add the product to the portfolio.\n Navigate to the ServiceCatalogFactory CodeCommit repository again\n Click on portfolios\n     Click on reinvent.yaml     Click Edit     Replace the contents of your file with this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Take note of lines 26 and 27. We have added a portfolio to the product.  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the product was added to the portfolio Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your portfolio.\n Click on reinvent-cloud-engineering-governance     Click on the product aws-config-enable-config     Click on the version v1    "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/200-task-2/500-add-the-product-to-the-portfolio.html",
	"title": "Add product to portfolio",
	"tags": [],
	"description": "",
	"content": " Add the product to the portfolio Now that you have a product and portfolio you can add the product to the portfolio.\n Navigate to the ServiceCatalogFactory CodeCommit repository again\n Click on portfolios\n     Click on reinvent.yaml     Click Edit     Replace the contents of your file with this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify that the product was added to the portfolio Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick, the pipeline may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your portfolio.\n Click on reinvent-cloud-engineering-governance     Click on the product aws-config-s3-bucket-server-side-encryption-enabled     Click on the version v1    "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3/500-add-the-product-to-the-portfolio.html",
	"title": "Add the product to the portfolio",
	"tags": [],
	"description": "",
	"content": " Add the product to the portfolio Now that you have a product and portfolio you can add the product to the portfolio.\nAdd the product to the portfolio  Navigate to the ServiceCatalogFactory CodeCommit repository again\n Click on portfolios\n     Click on reinvent.yaml     Click Edit     Replace the contents of your file with this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance-self-service\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - DisplayName: \u0026#34;cloud-engineering-governance-self-service\u0026#34; Description: \u0026#34;Portfolio containing the products you can use to ensure governance of AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Take note of lines 26 and 27. We have added a portfolio to the product.  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the product was added to the portfolio Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your portfolio.\n Click on reinvent-cloud-engineering-governance     Click on the product compliant-bucket     Click on the version v1    "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/400-task-4/500-add-the-product-to-the-portfolio.html",
	"title": "Add the product to the portfolio",
	"tags": [],
	"description": "",
	"content": " Add the product to the portfolio Now that you have a product and portfolio you can add the product to the portfolio.\nAdd the product to the portfolio  Navigate to the ServiceCatalogFactory CodeCommit repository again\n Click on portfolios\n     Click on reinvent.yaml     Click Edit     Replace the contents of your file with this:  Schema: factory-2019-04-01 Products: - Name: \u0026#34;aws-config-enable-config\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables AWS Config\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-enable-config\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-enable-config\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-enable-config\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Enables the AWS Config managed rule s3-bucket-server-side-encryption-enabled\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance\u0026#34; - Name: \u0026#34;compliant-bucket\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS S3 bucket that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-bucket\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-bucket\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-bucket\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance-self-service\u0026#34; - Name: \u0026#34;compliant-iam-role\u0026#34; Owner: \u0026#34;data-governance@acme.com\u0026#34; Description: \u0026#34;Will provision an AWS IAM role that meets data-governance standards\u0026#34; Distributor: \u0026#34;cloud-engineering\u0026#34; SupportDescription: \u0026#34;Speak to data-governance@acme.com about exceptions and speak to cloud-engineering@acme.com about implementation issues\u0026#34; SupportEmail: \u0026#34;cloud-engineering@acme.com\u0026#34; SupportUrl: \u0026#34;https://wiki.acme.com/cloud-engineering/governance/compliant-iam-role\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; Versions: - Name: \u0026#34;v1\u0026#34; Description: \u0026#34;v1 of compliant-iam-role\u0026#34; Active: True Source: Provider: \u0026#34;CodeCommit\u0026#34; Configuration: RepositoryName: \u0026#34;compliant-iam-role\u0026#34; BranchName: \u0026#34;master\u0026#34; Portfolios: - \u0026#34;cloud-engineering-governance-self-service\u0026#34; Portfolios: - DisplayName: \u0026#34;cloud-engineering-governance\u0026#34; Description: \u0026#34;Portfolio containing the products needed to govern AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - Key: \u0026#34;cost-center\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34; - DisplayName: \u0026#34;cloud-engineering-governance-self-service\u0026#34; Description: \u0026#34;Portfolio containing the products you can use to ensure governance of AWS accounts\u0026#34; ProviderName: \u0026#34;cloud-engineering\u0026#34; Associations: - \u0026#34;arn:aws:iam::${AWS::AccountId}:role/TeamRole\u0026#34; Tags: - Key: \u0026#34;type\u0026#34; Value: \u0026#34;governance\u0026#34; - Key: \u0026#34;creator\u0026#34; Value: \u0026#34;cloud-engineering\u0026#34;   Take note of lines 26 and 27. We have added a portfolio to the product.  Once you have updated the file fill in the fields for Author name, Email address, Commit message and hit Commit changes\n  Using a good / unique commit message will help you understand what is going on later.\n Verify the product was added to the portfolio Once you have made your changes the ServiceCatalogFactory Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your portfolio.\n Click on reinvent-cloud-engineering-governance     Click on the product compliant-iam-role     Click on the version v1    "
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/100-task-1/600-provisioning-the-product.html",
	"title": "Provisioning the product",
	"tags": [],
	"description": "",
	"content": " Provisioning the product We will add our account to the frameworks manifest file so it knows about our account and we will tell the framework to provision our newly created product into our account.\nAdding an account to the manifest file We will start out by adding your account to the manifest file.\n Navigate to the ServiceCatalogPuppet CodeCommit repository\n Scroll down to the bottom of the page and hit the Create file button\n     Copy the following snippet into the main input field:   accounts: - account_id: \u0026#34;\u0026lt;YOUR_ACCOUNT_ID\u0026gt;\u0026#34; name: \u0026#34;puppet-account\u0026#34; default_region: \u0026#34;eu-west-1\u0026#34; regions_enabled: - \u0026#34;eu-west-1\u0026#34; - \u0026#34;eu-west-2\u0026#34; tags: - \u0026#34;type:prod\u0026#34; - \u0026#34;partition:eu\u0026#34; - \u0026#34;scope:pci\u0026#34;   Update account_id on line to show your account id  Adding the product to the manifest Now we are ready to add a product to the manifest file.\n Add the following snippet to the end of the main input field:   launches: aws-config-enable-config: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-enable-config\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;   The main input field should look like this:   accounts: - account_id: \u0026#34;\u0026lt;YOUR_ACCOUNT_ID\u0026gt;\u0026#34; name: \u0026#34;puppet-account\u0026#34; default_region: \u0026#34;eu-west-1\u0026#34; regions_enabled: - \u0026#34;eu-west-1\u0026#34; - \u0026#34;eu-west-2\u0026#34; tags: - \u0026#34;type:prod\u0026#34; - \u0026#34;partition:eu\u0026#34; - \u0026#34;scope:pci\u0026#34; launches: aws-config-enable-config: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-enable-config\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;  Committing the manifest file Now that we have written the manifest file we are ready to commit it.\n Set the File name to manifest.yaml\n Set your Author name\n Set your Email address\n Set your Commit message\n  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verifying the provisioning Once you have made your changes the ServiceCatalogPuppet Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog provisioned products to view your provisioned product. Please note when you arrive at the provisioned product page you will need to select account from the filter by drop down in the top right:\n  If you cannot see your product please raise your hand for some assistance\n You have now successfully provisioned a product! When provisioned, this product will automatically enable AWS Config.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/200-task-2/600-provisioning-the-product.html",
	"title": "Provisioning the product",
	"tags": [],
	"description": "",
	"content": " Provisioning the product We will add our account to the frameworks manifest file so it knows about our account and we will tell the framework to provision our newly created product into our account.\nAdding the product to the manifest We will start out by adding your account to the manifest file.\n Navigate to the ServiceCatalogPuppet CodeCommit repository again\n Click on manifest.yaml\n Click Edit\n     Append the following snippet to the YAML document in the main input field (be careful with your indentation):   aws-config-s3-bucket-server-side-encryption-enabled: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;   The main input field should look like this:   accounts: - account_id: \u0026#34;\u0026lt;YOUR_ACCOUNT_ID\u0026gt;\u0026#34; name: \u0026#34;puppet-account\u0026#34; default_region: \u0026#34;eu-west-1\u0026#34; regions_enabled: - \u0026#34;eu-west-1\u0026#34; - \u0026#34;eu-west-2\u0026#34; tags: - \u0026#34;type:prod\u0026#34; - \u0026#34;partition:eu\u0026#34; - \u0026#34;scope:pci\u0026#34; launches: aws-config-enable-config: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-enable-config\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34; aws-config-s3-bucket-server-side-encryption-enabled: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;  Committing the manifest file Now that we have written the manifest file we are ready to commit it.\n Set your Author name Set your Email address Set your Commit message  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verifying the provisioning Once you have made your changes the ServiceCatalogPuppet Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog provisioned products to view your provisioned product. Please note when you arrive at the provisioned product page you will need to select account from the filter by drop down in the top right:\n  If you cannot see your product please raise your hand for some assistance\n You have now successfully provisioned another product! This product enables an AWS Config rule that looks for buckets that don\u0026rsquo;t have server side encryption enabled.\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/300-task-3/600-sharing-the-product.html",
	"title": "Sharing the product",
	"tags": [],
	"description": "",
	"content": " Sharing the product We need to tell the framework that we want to share the portfolio cloud-engineering-governance-self-service. To do this we will need to update the manifest file.\nAdding your shares to the manifest  Navigate to the ServiceCatalogPuppet CodeCommit repository again\n Click on manifest.yaml\n Click Edit\n     Append the following snippet to the YAML document in the main input field (be careful with your indentation):   spoke-local-portfolios: account-vending-for-spokes: portfolio: cloud-engineering-governance-self-service deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;   The main input field should look like this:   accounts: - account_id: \u0026#34;\u0026lt;YOUR_ACCOUNT_ID\u0026gt;\u0026#34; name: \u0026#34;puppet-account\u0026#34; default_region: \u0026#34;eu-west-1\u0026#34; regions_enabled: - \u0026#34;eu-west-1\u0026#34; - \u0026#34;eu-west-2\u0026#34; tags: - \u0026#34;type:prod\u0026#34; - \u0026#34;partition:eu\u0026#34; - \u0026#34;scope:pci\u0026#34; launches: aws-config-enable-config: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-enable-config\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34; aws-config-s3-bucket-server-side-encryption-enabled: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34; spoke-local-portfolios: account-vending-for-spokes: portfolio: cloud-engineering-governance-self-service deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;  Committing the manifest file Now that we have written the manifest file we are ready to commit it.\n Set your Author name Set your Email address Set your Commit message  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verifying the provisioning Once you have made your changes the ServiceCatalogPuppet Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your shared product.\nWhen you share a portfolio the framework will decide if it should share the portfolio. If the target account is the same as the factory account it will not share the portfolio as it is not needed.\nIf you cannot see your product please raise your hand for some assistance\n You have now successfully shared a portfolio!\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/reinvent2019/400-task-4/600-sharing-the-product.html",
	"title": "Sharing the product",
	"tags": [],
	"description": "",
	"content": " Sharing the product We need to tell the framework that we want to share the portfolio cloud-engineering-governance-self-service. To do this we will need to update the manifest file.\nAdding your shares to the manifest  Navigate to the ServiceCatalogPuppet CodeCommit repository again\n Click on manifest.yaml\n Click Edit\n     Append the following snippet to the YAML document in the main input field (be careful with your indentation):   spoke-local-portfolios: account-vending-for-spokes: portfolio: cloud-engineering-governance-self-service deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;   The main input field should look like this:   accounts: - account_id: \u0026#34;\u0026lt;YOUR_ACCOUNT_ID\u0026gt;\u0026#34; name: \u0026#34;puppet-account\u0026#34; default_region: \u0026#34;eu-west-1\u0026#34; regions_enabled: - \u0026#34;eu-west-1\u0026#34; - \u0026#34;eu-west-2\u0026#34; tags: - \u0026#34;type:prod\u0026#34; - \u0026#34;partition:eu\u0026#34; - \u0026#34;scope:pci\u0026#34; launches: aws-config-enable-config: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-enable-config\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34; aws-config-s3-bucket-server-side-encryption-enabled: portfolio: \u0026#34;reinvent-cloud-engineering-governance\u0026#34; product: \u0026#34;aws-config-s3-bucket-server-side-encryption-enabled\u0026#34; version: \u0026#34;v1\u0026#34; deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34; spoke-local-portfolios: account-vending-for-spokes: portfolio: cloud-engineering-governance-self-service deploy_to: tags: - tag: \u0026#34;type:prod\u0026#34; regions: \u0026#34;default_region\u0026#34;  Committing the manifest file Now that we have written the manifest file we are ready to commit it.\n Set your Author name Set your Email address Set your Commit message  Using a good / unique commit message will help you understand what is going on later.\n  Click the Commit changes button:    Verifying the provisioning Once you have made your changes the ServiceCatalogPuppet Pipeline should have run or if you were quick may still be running. If it has not yet started feel free to the hit the Release change button.\nOnce it has completed it should show the Source and Build stages in green to indicate they have completed successfully:\n  If this is failing please raise your hand for some assistance\n Once you have verified the pipeline has run you can go to Service Catalog portfolios to view your shared product.\nWhen you share a portfolio the framework will decide if it should share the portfolio. If the target account is the same as the factory account it will not share the portfolio as it is not needed.\nIf you cannot see your product please raise your hand for some assistance\n You have now successfully shared a portfolio!\n"
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/999-further_reading.html",
	"title": "Further Reading",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/999-further_reading/9999-links_and_further_reading.html",
	"title": "Links and further reading",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://servicecatalogtoolsworkshop.com/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]